uint32_t sortADC[1000];
uint32_t num_discreteADC = 0;
uint32_t size1 = sortADC[0];
	for(int i =0;i<1000;i++){
		sortADC[i]=adc_dump[i];
	}
	qsort(sortADC, 1000,sizeof(uint32_t),cmpfunc);
for (int j=1; j<1000; j++) //finding number of discrete ADC value
{
	if(sortADC[j] != size1)
	{
		size1 = sortADC[j];
		num_discreteADC++;
	}
}
uint32_t xBuffer[num_discreteADC];
uint32_t size2 = sortADC[0];
xBuffer[0]=sortADC[0];
for (int k=1; k<1000; k++) //finding number of discrete ADC value
{
	if(sortADC[k] != size2)
	{
		size2 = sortADC[k];
		xBuffer[k]=sortADC[k];
	}
}
	count++;



uint32_t sortADC[1000];
uint32_t num_discreteADC = 0;
uint32_t tmp = sortADC[0];
uint32_t* xbuff;
uint32_t* ybuff;
	for(int i =0;i<1000;i++){
		sortADC[i]=adc_dump[i];
	}
		qsort(sortADC, 1000,sizeof(uint32_t),cmpfunc);


for (int i=1; i<1000; i++) //finding number of discrete ADC value
{
	if(sortADC[i] != tmp)
	{
		tmp = sortADC[i];
		num_discreteADC++;
	}
}
xbuff = (uint32_t*) malloc(num_discreteADC);	//allocate memory for to the buffers for the size of xbuff and y buff
ybuff = (uint32_t*) malloc(num_discreteADC);
num_discreteADC = 0;
tmp = sortADC[0];	//assign values to fill up xbuff and ybuff
*xbuff = sortADC[0];
*ybuff = 1;
for (int i=1; i<1000; i++) //finding number of discrete ADC value
{
	if(sortADC[i] != tmp)
	{
		tmp = sortADC[i];
		*(xbuff + num_discreteADC) = sortADC[i]; 
		*(ybuff + num_discreteADC) = 1;			
	}
	else
	{
		*(ybuff + num_discreteADC)+=1; //increment frequency
	}
}
/*
ST7735_XYplotInit("PMF of ADC",-450, 150, -400, 200);
ST7735_XYplot(num_discreteADC,(uint32_t *)xbuff,(uint32_t *)ybuff);
free(xbuff);
free(ybuff);*/
count++;
